#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const { execSync } = require("child_process");

console.log("üöÄ Configuration de ShopDemo...\n");

// V√©rifier les pr√©requis
function checkPrerequisites() {
  console.log("üìã V√©rification des pr√©requis...");

  try {
    execSync("node --version", { stdio: "pipe" });
    console.log("‚úÖ Node.js d√©tect√©");
  } catch (error) {
    console.error("‚ùå Node.js n'est pas install√©");
    process.exit(1);
  }

  try {
    execSync("npm --version", { stdio: "pipe" });
    console.log("‚úÖ npm d√©tect√©");
  } catch (error) {
    console.error("‚ùå npm n'est pas install√©");
    process.exit(1);
  }

  try {
    execSync("mysql --version", { stdio: "pipe" });
    console.log("‚úÖ MySQL d√©tect√©");
  } catch (error) {
    console.error("‚ùå MySQL n'est pas install√© ou pas dans le PATH");
    console.log("üí° Installez MySQL et assurez-vous qu'il est dans votre PATH");
  }
}

// Cr√©er les fichiers .env
function createEnvFiles() {
  console.log("\nüîß Cr√©ation des fichiers de configuration...");

  // Backend .env
  const backendEnvPath = path.join(__dirname, "..", "backend", ".env");
  const backendEnvExample = path.join(
    __dirname,
    "..",
    "backend",
    "env.example"
  );

  if (!fs.existsSync(backendEnvPath) && fs.existsSync(backendEnvExample)) {
    fs.copyFileSync(backendEnvExample, backendEnvPath);
    console.log("‚úÖ Fichier .env cr√©√© pour le backend");
  } else if (fs.existsSync(backendEnvPath)) {
    console.log("‚ÑπÔ∏è  Fichier .env backend existe d√©j√†");
  }

  // Frontend .env
  const frontendEnvPath = path.join(__dirname, "..", "frontend", ".env");
  const frontendEnvContent = `REACT_APP_API_URL=http://localhost:5000/api
REACT_APP_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
`;

  if (!fs.existsSync(frontendEnvPath)) {
    fs.writeFileSync(frontendEnvPath, frontendEnvContent);
    console.log("‚úÖ Fichier .env cr√©√© pour le frontend");
  } else {
    console.log("‚ÑπÔ∏è  Fichier .env frontend existe d√©j√†");
  }
}

// Installer les d√©pendances
function installDependencies() {
  console.log("\nüì¶ Installation des d√©pendances...");

  try {
    console.log("üì¶ Installation des d√©pendances racine...");
    execSync("npm install", {
      stdio: "inherit",
      cwd: path.join(__dirname, ".."),
    });

    console.log("üì¶ Installation des d√©pendances backend...");
    execSync("npm install", {
      stdio: "inherit",
      cwd: path.join(__dirname, "..", "backend"),
    });

    console.log("üì¶ Installation des d√©pendances frontend...");
    execSync("npm install", {
      stdio: "inherit",
      cwd: path.join(__dirname, "..", "frontend"),
    });

    console.log("‚úÖ Toutes les d√©pendances install√©es");
  } catch (error) {
    console.error(
      "‚ùå Erreur lors de l'installation des d√©pendances:",
      error.message
    );
    process.exit(1);
  }
}

// Instructions pour la base de donn√©es
function databaseInstructions() {
  console.log("\nüóÑÔ∏è  Configuration de la base de donn√©es:");
  console.log('1. Cr√©ez une base de donn√©es MySQL nomm√©e "shopdemo"');
  console.log("2. Importez le sch√©ma:");
  console.log("   mysql -u root -p shopdemo < database/schema.sql");
  console.log("3. (Optionnel) Importez les donn√©es de d√©mo:");
  console.log("   mysql -u root -p shopdemo < database/demo-data.sql");
  console.log("4. Configurez les identifiants dans backend/.env");
}

// Instructions finales
function finalInstructions() {
  console.log("\nüéâ Configuration termin√©e !");
  console.log("\nüìù Prochaines √©tapes:");
  console.log("1. Configurez votre base de donn√©es MySQL");
  console.log("2. Modifiez les variables d'environnement dans backend/.env");
  console.log("3. Lancez l'application:");
  console.log("   npm run dev");
  console.log("\nüåê URLs:");
  console.log("   Frontend: http://localhost:3000");
  console.log("   Backend:  http://localhost:5000");
  console.log("\nüë§ Comptes de d√©mo:");
  console.log("   Admin: admin@shopdemo.com / admin123");
  console.log("   User:  user@shopdemo.com / user123");
  console.log("\nüìö Documentation: INSTALLATION.md");
}

// Fonction principale
function main() {
  try {
    checkPrerequisites();
    createEnvFiles();
    installDependencies();
    databaseInstructions();
    finalInstructions();
  } catch (error) {
    console.error("‚ùå Erreur lors de la configuration:", error.message);
    process.exit(1);
  }
}

// Lancer le script
if (require.main === module) {
  main();
}

module.exports = { main };
